* Introduction
  Metaphor is a system for expressing formal grammars, generating compliant strings and then interpreting those strings in a given context. Grammars are stored as .gr files (see examples and then the Shell is used to interact with the Metaphor system

* The Shell
  shell.py is a script that implements a simple shell interface to Metaphor functionality. The following commands are supported:
  - compile <filename>
    Supply the name of a file containing Grammars. Metaphor will compile the file and make the defined grammars available to the user.
  - generate <grammar name> #generations
    Supply the name of the grammar and the number of generations to run and a compliant string will be created, displayed and saved to a stack for later use.
  - usecontext <name>
    Give the name of a context to be used in creating the final output. Currently a simple Turtle graphics context is available. Contexts must be placed in the contexts folder
  - interpretlast <filename>
    This will interpret the last created string in the given context and save it with the given filename.

* Examples
  See the lsys.gr example for a set of sample Grammars and the pics folder for their results. 
  The FractalPlant hasn't been created because the context doesn't have those features yet.

* Short Term Improvements
  - Add features to the Turtle context
  - Test probabilistic grammars
  - Fill out the built-in help system

* Long term Improvements
  - Add support for Parametric Grammars
  - Basic numeric operations
  - More interface options
    1. A GUI for non-CS users
    2. A batch mode to create multiple strings at a time
  - More contexts
  - ???? A way to combine grammars
